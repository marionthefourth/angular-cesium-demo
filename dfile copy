# Install Dependencies
# FROM nginx:1.21.6-alpine AS deps
# FROM node:18-alpine3.14 AS deps
FROM node:18-alpine AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app
COPY package.json yarn.lock ./
WORKDIR /usr/local/bin
RUN yarn install --frozen-lockfile

# Build Node Modules
# FROM nginx:1.21.6-alpine AS builder
# FROM node:18-alpine3.14 AS builder
FROM node:18-alpine AS builder
COPY . .
WORKDIR /usr/local/bin
CMD ["ls"]
COPY --from=deps /app/node_modules ./node_modules
RUN yarn build

# Run Pulling Server
# FROM nginx:1.17.1-alpine AS server
# FROM node:18-alpine3.14 AS server
FROM node:18-alpine AS server
WORKDIR /app
EXPOSE 3000
ENV PORT 3000
RUN yarn server

# Run Production Server
# FROM nginx:1.21.6-alpine AS runner
# FROM node:18-alpine3.14 AS runner
FROM node:18-alpine AS runner
WORKDIR /app
ENV NODE_ENV production

RUN addgroup -g 1001 -S nodejs
RUN adduser -S angularjs -u 1001

COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/package.json ./package.json

USER angularjs

EXPOSE 4200
ENV PORT 4200

ENV NEXT_TELEMETRY_DISABLED 1

RUN yarn start